{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","saveBusqueda","saveConsultar","useState","error","saveError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","saveResultado","useEffect","a","url","fetch","response","json","result","cod","consultarApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94180598.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({titulo}) => {\n    return ( \n        <nav>\n            <div className=\"nav-wrapper light-blue darken-2\">\n                <a href=\"#!\" className=\"brand-logo\"> {titulo} </a>\n            </div>\n        </nav>\n     );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\n \nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Error = ({mensaje}) => {\n    return ( \n\n        <p className=\"error red darken-4\"> {mensaje} </p>\n\n     );\n}\n\nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n}\n \nexport default Error;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Error from './Error'\n\nconst Formulario = ({busqueda, saveBusqueda, saveConsultar}) => {\n\n    //State para el mensaje de error\n    const [error, saveError] = useState(false);\n\n    //extraer ciudad y pais\n    const {ciudad,pais} = busqueda;\n\n    //function que coloca los elementos en el state\n    const handleChange = e => {\n        //actualizar el state\n        saveBusqueda({\n            ...busqueda,\n            [e.target.name] : e.target.value\n        });\n    }\n\n    //function cuando el usuario da submit al form\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        //Validar\n        if (ciudad.trim() === ''|| pais.trim() === ''){\n            saveError(true);\n            return;\n        }\n        saveError(false);\n\n        //pasar los valores al componente principal\n        saveConsultar(true)\n    }\n\n    return ( \n    \n        <form\n        onSubmit={handleSubmit}\n        >\n            { error \n                ? \n                    <Error \n                        mensaje=\"Ambos campos son obligatorios\"\n                    /> \n                : \n                    null \n            }\n\n            <div className=\"input-field col s12\">\n                <input \n                    type=\"text\"\n                    name=\"ciudad\"\n                    id=\"ciudad\"\n                    value={ciudad}\n                    onChange={handleChange}\n                />\n                <label htmlFor=\"ciudad\">Ciudad: </label>\n            </div>\n\n            <div className=\"input-field col s12\" >\n                <select\n                    name='pais'\n                    id=\"pais\"\n                    value={pais}\n                    onChange={handleChange}\n                >\n                        <option value=\"\">--- Seleccione un pais</option>\n                        <option value=\"US\">Estados Unidos</option>\n                        <option value=\"MX\">México</option>\n                        <option value=\"AR\">Argentina</option>\n                        <option value=\"CO\">Colombia</option>\n                        <option value=\"CR\">Costa Rica</option>\n                        <option value=\"ES\">España</option>\n                        <option value=\"PE\">Perú</option>\n\n                </select>\n                <label htmlFor=\"pais\">Pais: </label>\n            </div>\n            <div className=\"input-field col s12\">\n                <button \n                    type=\"submit\" \n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4\"\n                >Buscar Clima</button>\n            </div>\n        </form>\n    );\n}\n\nFormulario.propTypes = {\n    busqueda: PropTypes.object.isRequired,\n    saveBusqueda: PropTypes.func.isRequired,\n    saveConsultar: PropTypes.func.isRequired\n}\n \nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Clima = ({resultado}) => {\n\n    //Extraer los valores\n    const {name, main} = resultado;\n    const kelvin = 273.15;\n\n    if(!name) return null;\n    return ( \n        <div className=\"card-panel white col s12\">\n            <div className=\"black-text\">\n                <h2>\n                    La temperatura actual en {name} es de:\n                </h2>\n                    <p className=\"temperatura\">\n                        { parseFloat( main.temp - kelvin, 10 ).toFixed(2) } <span>&#x2103;</span>\n                    </p>\n                <p> \n                    Max: { parseFloat( main.temp_max - kelvin, 10 ).toFixed(2) } <span>&#x2103;</span> <br></br> \n                    Min: { parseFloat( main.temp_min - kelvin, 10 ).toFixed(2) } <span>&#x2103;</span> \n                </p>\n\n            </div>\n\n\n        </div>\n            \n     );\n}\n\nClima.propTypes = {\n    resultado: PropTypes.object.isRequired\n}\n \nexport default Clima;","import React, {Fragment, useState, useEffect} from 'react';\n//componentes\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Clima from \"./components/Clima\";\nimport Error from \"./components/Error\";\n\nfunction App() {\n  \n  //state del formulario\n  const [busqueda, saveBusqueda] = useState({\n    ciudad: '',\n    pais: ''\n});\n\n  //state dela consulta\n  const [consultar, saveConsultar] = useState(false);\n\n  // state para guardar la consulta\n  const [resultado , saveResultado] = useState({});\n\n  //state para el error en la consulta\n  const [error,saveError] = useState(false);\n\n  //extraer ciudad y pais\n  const {ciudad,pais} = busqueda;\n\n  useEffect(() => {\n\n    if (consultar){\n\n      const consultarApi = async () => {\n        \n        const APIkey = '0d668973fe0bd8cc8042ac8e9fb92eaa';\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${APIkey}`;\n        \n        const response = await fetch(url);\n        const result = await response.json();\n  \n        saveResultado(result);\n        saveConsultar(false);\n        \n        //Detectamos si no existen errorres en la consulta\n        if (resultado.cod === \"404\") {\n          saveError(true);\n        } else{\n          saveError(false);\n        }\n      }\n      consultarApi();\n    }\n    \n  },[consultar,ciudad, pais, resultado.cod]);\n\n  let componente;\n\n  if(error){\n    componente = <Error mensaje=\"No hay resultados\" />\n  } else{\n    componente = <Clima\n                  resultado={resultado}\n                />\n  }\n\n  return (\n    <Fragment>\n      <Header\n        titulo=\"Clima React\"\n      />\n        <div className=\"contenedor-form\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col m6 s12\">\n                  <Formulario\n                    busqueda={busqueda}\n                    saveBusqueda={saveBusqueda}\n                    saveConsultar={saveConsultar} \n                  />\n                  \n                </div>\n                <div className=\"col m6 s12\">\n                    \n                    {componente}\n                    \n                </div>\n              </div>\n            </div>\n        </div>\n\n\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}